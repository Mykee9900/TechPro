// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechPro.Models;

#nullable disable

namespace TechPro.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240716144850_AddCategoryForeignKeys")]
    partial class AddCategoryForeignKeys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-preview.6.24327.4");

            modelBuilder.Entity("TechPro.Models.Data.CartItems", b =>
                {
                    b.Property<int>("CartItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CartID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("CartItemID");

                    b.HasIndex("CartID");

                    b.HasIndex("ProductID");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("TechPro.Models.Data.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("TechPro.Models.Data.ChatBox", b =>
                {
                    b.Property<int>("ChatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MessageStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ChatID");

                    b.HasIndex("CustomerID");

                    b.ToTable("ChatBox");
                });

            modelBuilder.Entity("TechPro.Models.Data.Customers", b =>
                {
                    b.Property<int>("CustID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CustID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("TechPro.Models.Data.Inventory", b =>
                {
                    b.Property<int>("InventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("InventID");

                    b.HasIndex("ProductID");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("TechPro.Models.Data.NetworkPackages", b =>
                {
                    b.Property<int>("PackageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PackageDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PackagePrice")
                        .HasColumnType("INTEGER");

                    b.HasKey("PackageID");

                    b.ToTable("NetworkPackage");
                });

            modelBuilder.Entity("TechPro.Models.Data.NetworkType", b =>
                {
                    b.Property<int>("NetworkTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NetworkTypeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NetworkTypeID");

                    b.ToTable("NetworkTypes");
                });

            modelBuilder.Entity("TechPro.Models.Data.OrderItems", b =>
                {
                    b.Property<int>("OrderItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("price")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderItemID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("TechPro.Models.Data.Orders", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderSTatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TechPro.Models.Data.PackageProduct", b =>
                {
                    b.Property<int>("PackageProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PackageID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("PackageProductID");

                    b.HasIndex("PackageID");

                    b.HasIndex("ProductID");

                    b.ToTable("PackageProduct");
                });

            modelBuilder.Entity("TechPro.Models.Data.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductPrice")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("TechPro.Models.Data.PurchaseItems", b =>
                {
                    b.Property<int>("PurchaseItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PurchaseID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("PurchaseItemID");

                    b.HasIndex("ProductID");

                    b.HasIndex("PurchaseID");

                    b.ToTable("PurchaseItems");
                });

            modelBuilder.Entity("TechPro.Models.Data.Purchases", b =>
                {
                    b.Property<int>("PurchaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TotalAmount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PurchaseID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("TechPro.Models.Data.ShoppingCart", b =>
                {
                    b.Property<int>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("CartID");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("TechPro.Models.Data.CartItems", b =>
                {
                    b.HasOne("TechPro.Models.Data.ShoppingCart", "ShoppingCart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechPro.Models.Data.Products", "Products")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("TechPro.Models.Data.ChatBox", b =>
                {
                    b.HasOne("TechPro.Models.Data.Customers", "Customers")
                        .WithMany("ChatBox")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("TechPro.Models.Data.Inventory", b =>
                {
                    b.HasOne("TechPro.Models.Data.Products", "Products")
                        .WithMany("Inventory")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("TechPro.Models.Data.OrderItems", b =>
                {
                    b.HasOne("TechPro.Models.Data.Orders", "Orders")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechPro.Models.Data.Products", "Products")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("TechPro.Models.Data.Orders", b =>
                {
                    b.HasOne("TechPro.Models.Data.Customers", "Customers")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("TechPro.Models.Data.PackageProduct", b =>
                {
                    b.HasOne("TechPro.Models.Data.NetworkPackages", "NetworkPackages")
                        .WithMany("PackageProduct")
                        .HasForeignKey("PackageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechPro.Models.Data.Products", "Products")
                        .WithMany("PackageProduct")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NetworkPackages");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("TechPro.Models.Data.Products", b =>
                {
                    b.HasOne("TechPro.Models.Data.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TechPro.Models.Data.PurchaseItems", b =>
                {
                    b.HasOne("TechPro.Models.Data.Products", "Products")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechPro.Models.Data.Purchases", "Purchases")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("PurchaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("TechPro.Models.Data.Purchases", b =>
                {
                    b.HasOne("TechPro.Models.Data.Customers", "Customers")
                        .WithMany("Purchases")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("TechPro.Models.Data.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("TechPro.Models.Data.Customers", b =>
                {
                    b.Navigation("ChatBox");

                    b.Navigation("Orders");

                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("TechPro.Models.Data.NetworkPackages", b =>
                {
                    b.Navigation("PackageProduct");
                });

            modelBuilder.Entity("TechPro.Models.Data.Orders", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("TechPro.Models.Data.Products", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Inventory");

                    b.Navigation("OrderItems");

                    b.Navigation("PackageProduct");

                    b.Navigation("PurchaseItems");
                });

            modelBuilder.Entity("TechPro.Models.Data.Purchases", b =>
                {
                    b.Navigation("PurchaseItems");
                });

            modelBuilder.Entity("TechPro.Models.Data.ShoppingCart", b =>
                {
                    b.Navigation("CartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
